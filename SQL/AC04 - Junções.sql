-- * ---------------------------------------------------------------------------------------------------------------- * -- 
-- * AC04 -											LINGUAGEM SQL									- [[[JUNÇÕES]]]   * --
-- *																												  * --
-- * OBJETIVO DA ATIVIDADE: FIXAR OS CONTEÚDOS SOBRE JUNÇÕES, APLICANDO CONCEITOS UTILIZADOS EM SALA DE AULA          * --
-- * ---------------------------------------------------------------------------------------------------------------- * -- 
USE PEDIDOS
-- 01. BUSCAR OS NOMES DE EMPREGADOS, COM NOMES DE CARGOS, O SALARIO ATUAL E O SALARIO INICIAL 
-- E A DIFERENCA ENTRE O SALARIO ATUAL E O SALARIO INICIAL - SUBTRAIR UM DO OUTRO (VALOR: 1,5 PONTO)

SELECT E.NOME,
		C.CARGO,
		E.SALARIO, 
		C.SALARIO_INIC,
		E.SALARIO - C.SALARIO_INIC [DIFERENCA SALARIO]
FROM TB_EMPREGADO E
JOIN TB_CARGO C ON C.COD_CARGO = E.COD_CARGO 

-- 02. TRAZER O NOME DE TODOS OS COLABORADORES, INDEPENDENTEMENTE DE TEREM OU NÃO DEPENDENTES. 
-- PARA OS QUE TIVEREM DEPENDENTES, TRAZER O NOME DOS DEPENDENTES TAMBÉM, PARA OS QUE NÃO TIVEREM, 
-- TRATAR O CAMPO (NOME) COM A INFORMAÇÃO "NÃO POSSUI DEPENDENTES" (VALOR: 1,5 PONTO)

SELECT E.NOME [COLABORADOR NOME], 
		ISNULL(D.NOME, 'NÃO POSSUI DEPENDENTES') [NOME DEPENDENTE]
FROM TB_DEPENDENTE D
RIGHT JOIN TB_EMPREGADO E ON E.CODFUN = D.CODFUN

-- 03. TRAZER O CÓDIGO DO EMPREGADO, O NOME DO EMPREGADO E O CÓDIGO E NOME DO SEU SUPERVISOR. 
-- PARA EMPREGADOS QUE NÃO POSSUÍREM SUPERVISOR, INFORMAR "NÃO FOI ENCONTRADO SUPERIOR" NO CAMPO NOME (VALOR: 1,5 PONTO)

SELECT E.CODFUN [COD FUNCIONARIO],
		E.NOME [NOME FUNCIONARIO],
		S.CODFUN [COD SUPERVISOR],
		ISNULL(S.NOME, 'NÃO FOI ENCONTRADO SUPERIOR') [NOME SUPERVISOR]
FROM TB_EMPREGADO E
LEFT JOIN TB_EMPREGADO S ON S.CODFUN = E.COD_SUPERVISOR

-- 04. 
-- A. LISTE OS CAMPOS NUM_PEDIDO, DATA_EMISSAO e VLR_TOTAL de PEDIDOS, SEGUIDOS DO NOME DO VENDEDOR

SELECT P.NUM_PEDIDO, 
		P.DATA_EMISSAO,
		P.VLR_TOTAL,
		V.NOME
FROM TB_PEDIDO P
JOIN TB_VENDEDOR V ON V.CODVEN = P.CODVEN

-- B. LISTE OS CAMPOS NUM_PEDIDO, DATA_EMISSAO e VLR_TOTAL de PEDIDOS, SEGUIDOS DO NOME DO CLIENTE

SELECT P.NUM_PEDIDO, 
		P.DATA_EMISSAO,
		P.VLR_TOTAL,
		C.NOME
FROM TB_PEDIDO P
JOIN TB_CLIENTE C ON C.CODCLI = P.CODCLI

-- C. UNIFIQUE AS DUAS CONSULTAS ANTERIORES, OU SEJA: LISTE OS CAMPOS NUM_PEDIDO, DATA_EMISSAO e VLR_TOTAL de PEDIDOS, 
--    SEGUIDOS DO NOME DO CLIENTE E DO NOME DO VENDEDOR (VALOR: 2,0 PONTOS)

SELECT P.NUM_PEDIDO, 
		P.DATA_EMISSAO,
		P.VLR_TOTAL,
		C.NOME [NOME CLIENTE],
		V.NOME [NOME VENDEDOR]
FROM TB_PEDIDO P
JOIN TB_VENDEDOR V ON V.CODVEN = P.CODVEN
JOIN TB_CLIENTE C ON C.CODCLI = P.CODCLI

-- 05. SELECIONAR EM UMA MESMA CONSULTA, OS CARGOS EM QUE NÃO ESTÁ ALOCADO NENHUM FUNCIONÁRIO E OS FUNCIONÁRIOS QUE NÃO
-- ESTÃO ALOCADOS EM NENHUM CARGO (VALOR: 1,5 PONTO)

SELECT  C.CARGO [CARGO],
		E.NOME [FUNCIONARIO]		
FROM TB_EMPREGADO E
FULL JOIN TB_CARGO C ON C.COD_CARGO = E.COD_CARGO
ORDER BY 2

-- 06. SELECIONAR TODOS OS PEDIDOS (TABELA TB_PEDIDO) COM SEUS RESPECTIVOS ITENS DE PEDIDO E QUANTIDADES (TABELA TB_ITENSPEDIDO), 
-- BEM COMO O CÓDIGO E DESCRIÇÃO DOS PRODUTOS ASSOCIADOS (TB_PRODUTO)
-- FILTRAR APENAS POR PRODUTOS BRANCOS OU LARANJA (TABELA TB_COR) E COM DATA DE EMISSÃO (TABELA TB_PEDIDO) ENTRE 2012 E 2013 (VALOR: 2,0 PONTO)

SELECT	PE.NUM_PEDIDO,
		IT.NUM_ITEM,
		IT.QUANTIDADE,
		PR.COD_PRODUTO,
		PR.DESCRICAO [DESCRIÇÃO PRODUTO],
		C.COR,
		PE.DATA_EMISSAO
FROM TB_PEDIDO PE
JOIN TB_ITENSPEDIDO IT ON IT.NUM_PEDIDO = PE.NUM_PEDIDO
JOIN TB_PRODUTO PR ON PR.COD_PRODUTO = IT.COD_PRODUTO
JOIN TB_COR C ON C.CODCOR = IT.CODCOR
WHERE PE.DATA_EMISSAO BETWEEN '2012.01.01' AND '2013.01.31'
--WHERE PE.DATA_EMISSAO BETWEEN '2012.01.01' AND '2013.31.01'
	AND (C.COR LIKE '%BRANCO%' OR C.COR LIKE '%LARANJA%')
ORDER BY 1

-- * ---------------------------------------------------------------------------------------------------------------- * -- 
-- * AC04 -											LINGUAGEM SQL									- [[[JUNÇÕES]]]   * --
-- *																												  * --
-- *												ÓTIMA ATIVIDADE!!!											      * --
-- * ---------------------------------------------------------------------------------------------------------------- * --